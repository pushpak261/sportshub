{"ast":null,"code":"// //\n// import axios from \"axios\";\n//\n// export default class ApiService {\n//\n//     //Here  I had used No Ip dns bcz when I stopped instance so it will automatically configure with instance ip address.\n//     // static BASE_URL = \"http://sportsclub.ddns.net:2424\";\n//\n//\n//\n//     // static BASE_URL = \"http://13.201.81.16:2424\";\n//     //\n//     //ec2-13-201-81-16.ap-south-1.compute.amazonaws.com\n//\n//     static BASE_URL = \"http://localhost:2424\";\n//\n//\n//\n//\n//\n//\n//     static getHeader() {\n//         const token = localStorage.getItem(\"token\");\n//         return {\n//             Authorization: `Bearer ${token}`,\n//             \"Content-Type\": \"application/json\"\n//         };\n//     }\n//\n//     /**AUTh && USERS API */\n//     static async registerUser(registration) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration)\n//         return response.data;\n//     }\n//\n//\n//     static async loginUser(loginDetails) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails)\n//         return response.data;\n//     }\n//\n//\n//     static async getLoggedInUserInfo() {\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//\n//     /**PRODUCT ENDPOINT */\n//\n//     static async addProduct(formData) {\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateProduct(formData) {\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProducts() {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`)\n//         return response.data;\n//     }\n//\n//     static async searchProducts(searchValue) {\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\n//             params: { searchValue }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProductsByCategoryId(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-category-id/${categoryId}`)\n//         return response.data;\n//     }\n//\n//     static async getProductById(productId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`)\n//         return response.data;\n//     }\n//\n//     static async deleteProduct(productId) {\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /**CATEGORY */\n//     static async createCategory(body) {\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     static async getAllCategory() {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`)\n//         return response.data;\n//     }\n//\n//     static async getCategoryById(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`)\n//         return response.data;\n//     }\n//\n//     static async updateCategory(categoryId, body) {\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     static async deleteCategory(categoryId) {\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     /**ORDEDR */\n//     static async createOrder(body) {\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     static async getAllOrders() {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     static async getOrderItemById(itemId) {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader(),\n//             params: {itemId}\n//         })\n//         return response.data;\n//     }\n//\n//     static async getAllOrderItemsByStatus(status) {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader(),\n//             params: {status}\n//         })\n//         return response.data;\n//     }\n//\n//     static async updateOrderitemStatus(orderItemId, status) {\n//         const response = await axios.put(`${this.BASE_URL}/order/update-item-status/${orderItemId}`, {}, {\n//             headers: this.getHeader(),\n//             params: {status}\n//         })\n//         return response.data;\n//     }\n//\n//\n//\n//\n//     /**ADDRESS */\n//     static async saveAddress(body) {\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     /***AUTHEMNTICATION CHECKER */\n//     static logout(){\n//         localStorage.removeItem('token')\n//         localStorage.removeItem('role')\n//     }\n//\n//     static isAuthenticated(){\n//         const token = localStorage.getItem('token')\n//         return !!token\n//     }\n//\n//     static isAdmin(){\n//         const role = localStorage.getItem('role')\n//         return role === 'ADMIN'\n//     }\n//\n// }\n\n// import axios from \"axios\";\n//\n// export default class ApiService {\n//     static BASE_URL = \"http://localhost:2424\";\n//\n//     static getHeader() {\n//         const token = localStorage.getItem(\"token\");\n//         return {\n//             Authorization: `Bearer ${token}`,\n//             \"Content-Type\": \"application/json\"\n//         };\n//     }\n//\n//     /** AUTH & USERS API */\n//     static async registerUser(registration) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\n//         return response.data;\n//     }\n//\n//     static async loginUser(loginDetails) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\n//         return response.data;\n//     }\n//\n//     static async getLoggedInUserInfo() {\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** PRODUCT ENDPOINT */\n//     static async addProduct(formData) {\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateProduct(formData) {\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProducts() {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`);\n//         return response.data;\n//     }\n//\n//     static async searchProducts(searchValue) {\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\n//             params: { searchValue }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProductsByCategoryId(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-category-id/${categoryId}`);\n//         return response.data;\n//     }\n//\n//     static async getProductById(productId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\n//         return response.data;\n//     }\n//\n//     static async deleteProduct(productId) {\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** CATEGORY */\n//     static async createCategory(body) {\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllCategory() {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`);\n//         return response.data;\n//     }\n//\n//     static async getCategoryById(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\n//         return response.data;\n//     }\n//\n//     static async updateCategory(categoryId, body) {\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async deleteCategory(categoryId) {\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** ORDER */\n//     static async createOrder(body) {\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllOrders() {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getOrderItemById(itemId) {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader(),\n//             params: { itemId }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllOrderItemsByStatus(status) {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader(),\n//             params: { status }\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateOrderitemStatus(orderItemId, status) {\n//         const response = await axios.put(`${this.BASE_URL}/order/update-item-status/${orderItemId}`, {}, {\n//             headers: this.getHeader(),\n//             params: { status }\n//         });\n//         return response.data;\n//     }\n//\n//     /** ADDRESS */\n//     static async saveAddress(body) {\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** CART */\n//     static async addItemToCart(item) {\n//         const response = await axios.post(`${this.BASE_URL}/cart/add-item`, item, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getCartItems() {\n//         const response = await axios.get(`${this.BASE_URL}/cart/get-items`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async removeCartItem(itemId) {\n//         const response = await axios.delete(`${this.BASE_URL}/cart/remove-item/${itemId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getCartItemsByUserId(userId, token) {\n//         const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\n//             headers: {\n//                 'Authorization': `Bearer ${token}`,\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     /** AUTHENTICATION CHECKER */\n//     static logout() {\n//         localStorage.removeItem(\"token\");\n//         localStorage.removeItem(\"role\");\n//     }\n//\n//     static isAuthenticated() {\n//         const token = localStorage.getItem(\"token\");\n//         return !!token;\n//     }\n//\n//     static isAdmin() {\n//         const role = localStorage.getItem(\"role\");\n//         return role === \"ADMIN\";\n//     }\n// }\n\n//\n// import axios from \"axios\";\n//\n// export default class ApiService {\n//     static BASE_URL = \"http://localhost:2424\";\n//\n//     static getHeader() {\n//         const token = localStorage.getItem(\"token\");\n//         return {\n//             Authorization: `Bearer ${token}`,\n//             \"Content-Type\": \"application/json\"\n//         };\n//     }\n//\n//     /** AUTH & USERS API */\n//     static async registerUser(registration) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\n//         return response.data;\n//     }\n//\n//     static async loginUser(loginDetails) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\n//         return response.data;\n//     }\n//\n//     static async getLoggedInUserInfo() {\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** PRODUCT ENDPOINT */\n//     static async addProduct(formData) {\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateProduct(formData) {\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProducts() {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`);\n//         return response.data;\n//     }\n//\n//     static async searchProducts(searchValue) {\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\n//             params: { searchValue }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getProductById(productId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\n//         return response.data;\n//     }\n//\n//     static async deleteProduct(productId) {\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** CATEGORY */\n//     static async createCategory(body) {\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllCategory() {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`);\n//         return response.data;\n//     }\n//\n//     static async getCategoryById(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\n//         return response.data;\n//     }\n//\n//     static async updateCategory(categoryId, body) {\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async deleteCategory(categoryId) {\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** ORDER */\n//     static async createOrder(body) {\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllOrders() {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** ADDRESS */\n//     static async saveAddress(body) {\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** CART */\n//     static async getCartByUserId(userId) {\n//         const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async addToCart(userId, productId, quantity) {\n//         const response = await axios.post(`${this.BASE_URL}/cart/add`, {\n//             userId,\n//             productId,\n//             quantity\n//         }, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateCartItem(cartId, quantity) {\n//         const response = await axios.put(`${this.BASE_URL}/cart/update/${cartId}`, null, {\n//             headers: this.getHeader(),\n//             params: { quantity }\n//         });\n//         return response.data;\n//     }\n//\n//     static async removeCartItem(cartId) {\n//         const response = await axios.delete(`${this.BASE_URL}/cart/remove/${cartId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** AUTHENTICATION CHECKER */\n//     static logout() {\n//         localStorage.removeItem(\"token\");\n//         localStorage.removeItem(\"role\");\n//     }\n//\n//     static isAuthenticated() {\n//         const token = localStorage.getItem(\"token\");\n//         return !!token;\n//     }\n//\n//     static isAdmin() {\n//         const role = localStorage.getItem(\"role\");\n//         return role === \"ADMIN\";\n//     }\n// }\n//\n\nimport axios from \"axios\";\nexport default class ApiService {\n  // Adjust to your backend URL\n\n  static getHeader() {\n    const token = localStorage.getItem(\"token\");\n    return {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    };\n  }\n\n  /** AUTH & USERS API */\n  static async registerUser(registration) {\n    const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\n    return response.data;\n  }\n  static async loginUser(loginDetails) {\n    const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\n    return response.data;\n  }\n  static async getLoggedInUserInfo() {\n    const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  /** PRODUCT ENDPOINT */\n  static async addProduct(formData) {\n    const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\n      headers: {\n        ...this.getHeader(),\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  }\n  static async updateProduct(formData) {\n    const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\n      headers: {\n        ...this.getHeader(),\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  }\n  static async getAllProducts() {\n    const response = await axios.get(`${this.BASE_URL}/product/get-all`);\n    return response.data;\n  }\n  static async searchProducts(searchValue) {\n    const response = await axios.get(`${this.BASE_URL}/product/search`, {\n      params: {\n        searchValue\n      }\n    });\n    return response.data;\n  }\n  static async getProductById(productId) {\n    const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\n    return response.data;\n  }\n  static async deleteProduct(productId) {\n    const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  /** CATEGORY ENDPOINT */\n  static async createCategory(body) {\n    const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async getAllCategory() {\n    const response = await axios.get(`${this.BASE_URL}/category/get-all`);\n    return response.data;\n  }\n  static async getCategoryById(categoryId) {\n    const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\n    return response.data;\n  }\n  static async updateCategory(categoryId, body) {\n    const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async deleteCategory(categoryId) {\n    const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  /** ORDER ENDPOINT */\n  static async createOrder(body) {\n    const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async getAllOrders() {\n    const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  /** ADDRESS ENDPOINT */\n  static async saveAddress(body) {\n    const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  /** CART ENDPOINT */\n  static async getCartByUserId(userId) {\n    const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async addToCart(userId, productId, quantity) {\n    const response = await axios.post(`${this.BASE_URL}/cart/add`, {\n      userId,\n      productId,\n      quantity\n    }, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async updateCartItem(cartId, quantity) {\n    const response = await axios.put(`${this.BASE_URL}/cart/update/${cartId}`, null, {\n      headers: this.getHeader(),\n      params: {\n        quantity\n      }\n    });\n    return response.data;\n  }\n  static async removeCartItem(cartId) {\n    const response = await axios.delete(`${this.BASE_URL}/cart/remove/${cartId}`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  /** AUTHENTICATION CHECKER */\n  static logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"role\");\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem(\"token\");\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem(\"role\");\n    return role === \"ADMIN\";\n  }\n}\nApiService.BASE_URL = \"http://localhost:2424\";","map":{"version":3,"names":["axios","ApiService","getHeader","token","localStorage","getItem","Authorization","registerUser","registration","response","post","BASE_URL","data","loginUser","loginDetails","getLoggedInUserInfo","get","headers","addProduct","formData","updateProduct","put","getAllProducts","searchProducts","searchValue","params","getProductById","productId","deleteProduct","delete","createCategory","body","getAllCategory","getCategoryById","categoryId","updateCategory","deleteCategory","createOrder","getAllOrders","saveAddress","getCartByUserId","userId","addToCart","quantity","updateCartItem","cartId","removeCartItem","logout","removeItem","isAuthenticated","isAdmin","role"],"sources":["D:/project modifications/sportshub/client/src/service/ApiService.js"],"sourcesContent":["// //\r\n// import axios from \"axios\";\r\n//\r\n// export default class ApiService {\r\n//\r\n//     //Here  I had used No Ip dns bcz when I stopped instance so it will automatically configure with instance ip address.\r\n//     // static BASE_URL = \"http://sportsclub.ddns.net:2424\";\r\n//\r\n//\r\n//\r\n//     // static BASE_URL = \"http://13.201.81.16:2424\";\r\n//     //\r\n//     //ec2-13-201-81-16.ap-south-1.compute.amazonaws.com\r\n//\r\n//     static BASE_URL = \"http://localhost:2424\";\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//     static getHeader() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return {\r\n//             Authorization: `Bearer ${token}`,\r\n//             \"Content-Type\": \"application/json\"\r\n//         };\r\n//     }\r\n//\r\n//     /**AUTh && USERS API */\r\n//     static async registerUser(registration) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration)\r\n//         return response.data;\r\n//     }\r\n//\r\n//\r\n//     static async loginUser(loginDetails) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails)\r\n//         return response.data;\r\n//     }\r\n//\r\n//\r\n//     static async getLoggedInUserInfo() {\r\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//\r\n//     /**PRODUCT ENDPOINT */\r\n//\r\n//     static async addProduct(formData) {\r\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateProduct(formData) {\r\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProducts() {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async searchProducts(searchValue) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\r\n//             params: { searchValue }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProductsByCategoryId(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-category-id/${categoryId}`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getProductById(productId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteProduct(productId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /**CATEGORY */\r\n//     static async createCategory(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllCategory() {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCategoryById(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateCategory(categoryId, body) {\r\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteCategory(categoryId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /**ORDEDR */\r\n//     static async createOrder(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrders() {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getOrderItemById(itemId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader(),\r\n//             params: {itemId}\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrderItemsByStatus(status) {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader(),\r\n//             params: {status}\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateOrderitemStatus(orderItemId, status) {\r\n//         const response = await axios.put(`${this.BASE_URL}/order/update-item-status/${orderItemId}`, {}, {\r\n//             headers: this.getHeader(),\r\n//             params: {status}\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//\r\n//\r\n//\r\n//     /**ADDRESS */\r\n//     static async saveAddress(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /***AUTHEMNTICATION CHECKER */\r\n//     static logout(){\r\n//         localStorage.removeItem('token')\r\n//         localStorage.removeItem('role')\r\n//     }\r\n//\r\n//     static isAuthenticated(){\r\n//         const token = localStorage.getItem('token')\r\n//         return !!token\r\n//     }\r\n//\r\n//     static isAdmin(){\r\n//         const role = localStorage.getItem('role')\r\n//         return role === 'ADMIN'\r\n//     }\r\n//\r\n// }\r\n\r\n\r\n\r\n// import axios from \"axios\";\r\n//\r\n// export default class ApiService {\r\n//     static BASE_URL = \"http://localhost:2424\";\r\n//\r\n//     static getHeader() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return {\r\n//             Authorization: `Bearer ${token}`,\r\n//             \"Content-Type\": \"application/json\"\r\n//         };\r\n//     }\r\n//\r\n//     /** AUTH & USERS API */\r\n//     static async registerUser(registration) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async loginUser(loginDetails) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getLoggedInUserInfo() {\r\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** PRODUCT ENDPOINT */\r\n//     static async addProduct(formData) {\r\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateProduct(formData) {\r\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProducts() {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async searchProducts(searchValue) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\r\n//             params: { searchValue }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProductsByCategoryId(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-category-id/${categoryId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getProductById(productId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteProduct(productId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** CATEGORY */\r\n//     static async createCategory(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllCategory() {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCategoryById(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateCategory(categoryId, body) {\r\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteCategory(categoryId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** ORDER */\r\n//     static async createOrder(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrders() {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getOrderItemById(itemId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader(),\r\n//             params: { itemId }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrderItemsByStatus(status) {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader(),\r\n//             params: { status }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateOrderitemStatus(orderItemId, status) {\r\n//         const response = await axios.put(`${this.BASE_URL}/order/update-item-status/${orderItemId}`, {}, {\r\n//             headers: this.getHeader(),\r\n//             params: { status }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** ADDRESS */\r\n//     static async saveAddress(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** CART */\r\n//     static async addItemToCart(item) {\r\n//         const response = await axios.post(`${this.BASE_URL}/cart/add-item`, item, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCartItems() {\r\n//         const response = await axios.get(`${this.BASE_URL}/cart/get-items`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async removeCartItem(itemId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/cart/remove-item/${itemId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCartItemsByUserId(userId, token) {\r\n//         const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\r\n//             headers: {\r\n//                 'Authorization': `Bearer ${token}`,\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** AUTHENTICATION CHECKER */\r\n//     static logout() {\r\n//         localStorage.removeItem(\"token\");\r\n//         localStorage.removeItem(\"role\");\r\n//     }\r\n//\r\n//     static isAuthenticated() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return !!token;\r\n//     }\r\n//\r\n//     static isAdmin() {\r\n//         const role = localStorage.getItem(\"role\");\r\n//         return role === \"ADMIN\";\r\n//     }\r\n// }\r\n\r\n//\r\n// import axios from \"axios\";\r\n//\r\n// export default class ApiService {\r\n//     static BASE_URL = \"http://localhost:2424\";\r\n//\r\n//     static getHeader() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return {\r\n//             Authorization: `Bearer ${token}`,\r\n//             \"Content-Type\": \"application/json\"\r\n//         };\r\n//     }\r\n//\r\n//     /** AUTH & USERS API */\r\n//     static async registerUser(registration) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async loginUser(loginDetails) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getLoggedInUserInfo() {\r\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** PRODUCT ENDPOINT */\r\n//     static async addProduct(formData) {\r\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateProduct(formData) {\r\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProducts() {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async searchProducts(searchValue) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\r\n//             params: { searchValue }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getProductById(productId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteProduct(productId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** CATEGORY */\r\n//     static async createCategory(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllCategory() {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCategoryById(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateCategory(categoryId, body) {\r\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteCategory(categoryId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** ORDER */\r\n//     static async createOrder(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrders() {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** ADDRESS */\r\n//     static async saveAddress(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** CART */\r\n//     static async getCartByUserId(userId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async addToCart(userId, productId, quantity) {\r\n//         const response = await axios.post(`${this.BASE_URL}/cart/add`, {\r\n//             userId,\r\n//             productId,\r\n//             quantity\r\n//         }, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateCartItem(cartId, quantity) {\r\n//         const response = await axios.put(`${this.BASE_URL}/cart/update/${cartId}`, null, {\r\n//             headers: this.getHeader(),\r\n//             params: { quantity }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async removeCartItem(cartId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/cart/remove/${cartId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** AUTHENTICATION CHECKER */\r\n//     static logout() {\r\n//         localStorage.removeItem(\"token\");\r\n//         localStorage.removeItem(\"role\");\r\n//     }\r\n//\r\n//     static isAuthenticated() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return !!token;\r\n//     }\r\n//\r\n//     static isAdmin() {\r\n//         const role = localStorage.getItem(\"role\");\r\n//         return role === \"ADMIN\";\r\n//     }\r\n// }\r\n//\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default class ApiService {\r\n    static BASE_URL = \"http://localhost:2424\"; // Adjust to your backend URL\r\n\r\n    static getHeader() {\r\n        const token = localStorage.getItem(\"token\");\r\n        return {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n    }\r\n\r\n    /** AUTH & USERS API */\r\n    static async registerUser(registration) {\r\n        const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\r\n        return response.data;\r\n    }\r\n\r\n    static async loginUser(loginDetails) {\r\n        const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\r\n        return response.data;\r\n    }\r\n\r\n    static async getLoggedInUserInfo() {\r\n        const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /** PRODUCT ENDPOINT */\r\n    static async addProduct(formData) {\r\n        const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\r\n            headers: {\r\n                ...this.getHeader(),\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async updateProduct(formData) {\r\n        const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\r\n            headers: {\r\n                ...this.getHeader(),\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async getAllProducts() {\r\n        const response = await axios.get(`${this.BASE_URL}/product/get-all`);\r\n        return response.data;\r\n    }\r\n\r\n    static async searchProducts(searchValue) {\r\n        const response = await axios.get(`${this.BASE_URL}/product/search`, {\r\n            params: { searchValue }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async getProductById(productId) {\r\n        const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\r\n        return response.data;\r\n    }\r\n\r\n    static async deleteProduct(productId) {\r\n        const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /** CATEGORY ENDPOINT */\r\n    static async createCategory(body) {\r\n        const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async getAllCategory() {\r\n        const response = await axios.get(`${this.BASE_URL}/category/get-all`);\r\n        return response.data;\r\n    }\r\n\r\n    static async getCategoryById(categoryId) {\r\n        const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\r\n        return response.data;\r\n    }\r\n\r\n    static async updateCategory(categoryId, body) {\r\n        const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async deleteCategory(categoryId) {\r\n        const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /** ORDER ENDPOINT */\r\n    static async createOrder(body) {\r\n        const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async getAllOrders() {\r\n        const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /** ADDRESS ENDPOINT */\r\n    static async saveAddress(body) {\r\n        const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /** CART ENDPOINT */\r\n    static async getCartByUserId(userId) {\r\n        const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async addToCart(userId, productId, quantity) {\r\n        const response = await axios.post(`${this.BASE_URL}/cart/add`, {\r\n            userId,\r\n            productId,\r\n            quantity\r\n        }, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async updateCartItem(cartId, quantity) {\r\n        const response = await axios.put(`${this.BASE_URL}/cart/update/${cartId}`, null, {\r\n            headers: this.getHeader(),\r\n            params: { quantity }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async removeCartItem(cartId) {\r\n        const response = await axios.delete(`${this.BASE_URL}/cart/remove/${cartId}`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /** AUTHENTICATION CHECKER */\r\n    static logout() {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"role\");\r\n    }\r\n\r\n    static isAuthenticated() {\r\n        const token = localStorage.getItem(\"token\");\r\n        return !!token;\r\n    }\r\n\r\n    static isAdmin() {\r\n        const role = localStorage.getItem(\"role\");\r\n        return role === \"ADMIN\";\r\n    }\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}