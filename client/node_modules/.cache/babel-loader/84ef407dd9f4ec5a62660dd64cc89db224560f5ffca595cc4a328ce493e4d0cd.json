{"ast":null,"code":"var _jsxFileName = \"D:\\\\project modifications\\\\sportshub\\\\client\\\\src\\\\component\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, {createContext, useReducer, useContext, useEffect} from \"react\";\n//\n// const CartContext = createContext();\n//\n// const initialState = {\n//     cart: JSON.parse(localStorage.getItem('cart')) || [],\n// }\n//\n//\n// const cartReducer = (state, action) =>{\n//     switch(action.type){\n//         case 'ADD_ITEM': {\n//             //identify exisitng item\n//             const existingItem = state.cart.find(item => item.id === action.payload.id);\n//             let newCart;\n//\n//             if(existingItem){\n//                 newCart = state.cart.map(item =>\n//                     item.id === action.payload.id\n//                         ? {...item, quantity: item.quantity + 1}\n//                         : item\n//                 );\n//             }else {\n//                 newCart = [...state.cart, {...action.payload, quantity: 1 }];\n//             }\n//             localStorage.setItem('cart', JSON.stringify(newCart));\n//             return {...state, cart:newCart};\n//         }\n//\n//         case 'REMOVE_ITEM':{\n//             const newCart = state.cart.filter(item=> item.id !== action.payload.id);\n//             localStorage.setItem('cart', JSON.stringify(newCart));\n//             return {...state, cart:newCart};\n//         }\n//\n//         case 'INCREMENT_ITEM': {\n//             const newCart = state.cart.map(item=>\n//                 item.id === action.payload.id\n//                     ? {...item, quantity: item.quantity + 1}\n//                     :item\n//             );\n//             localStorage.setItem('cart', JSON.stringify(newCart));\n//             return {...state, cart:newCart};\n//         }\n//\n//         case 'DECREMENT_ITEM': {\n//             const newCart = state.cart.map(item =>\n//                 item.id === action.payload.id && item.quantity > 1\n//                     ? {...item, quantity: item.quantity -1}\n//                     :item\n//             )\n//             localStorage.setItem('cart', JSON.stringify(newCart));\n//             return {...state, cart:newCart};\n//         }\n//\n//         case 'CLEAR_CART': {\n//             localStorage.removeItem('cart');\n//             return {...state, cart:[]};\n//         }\n//         default:\n//             return state;\n//     }\n// };\n//\n//\n//\n//\n// export const CartProvider = ({children}) => {\n//\n//     const [state, dispatch] = useReducer(cartReducer, initialState);\n//\n//\n//     useEffect(() =>{\n//         localStorage.setItem('cart', JSON.stringify(state.cart));\n//     }, [state.cart]);\n//\n//     return (\n//         <CartContext.Provider value={{cart: state.cart, dispatch}}>\n//             {children}\n//         </CartContext.Provider>\n//     )\n// }\n//\n// export const useCart = () => useContext(CartContext);\n//\n//\n\n//\nimport React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst initialState = {\n  cart: JSON.parse(localStorage.getItem('cart')) || []\n};\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      {\n        //identify exisitng item\n        const existingItem = state.cart.find(item => item.id === action.payload.id);\n        let newCart;\n        if (existingItem) {\n          newCart = state.cart.map(item => item.id === action.payload.id ? {\n            ...item,\n            quantity: item.quantity + 1\n          } : item);\n        } else {\n          newCart = [...state.cart, {\n            ...action.payload,\n            quantity: 1\n          }];\n        }\n        localStorage.setItem('cart', JSON.stringify(newCart));\n        return {\n          ...state,\n          cart: newCart\n        };\n      }\n    case 'REMOVE_ITEM':\n      {\n        const newCart = state.cart.filter(item => item.id !== action.payload.id);\n        localStorage.setItem('cart', JSON.stringify(newCart));\n        return {\n          ...state,\n          cart: newCart\n        };\n      }\n    case 'INCREMENT_ITEM':\n      {\n        const newCart = state.cart.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n        localStorage.setItem('cart', JSON.stringify(newCart));\n        return {\n          ...state,\n          cart: newCart\n        };\n      }\n    case 'DECREMENT_ITEM':\n      {\n        const newCart = state.cart.map(item => item.id === action.payload.id && item.quantity > 1 ? {\n          ...item,\n          quantity: item.quantity - 1\n        } : item);\n        localStorage.setItem('cart', JSON.stringify(newCart));\n        return {\n          ...state,\n          cart: newCart\n        };\n      }\n    case 'CLEAR_CART':\n      {\n        localStorage.removeItem('cart');\n        return {\n          ...state,\n          cart: []\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state.cart));\n  }, [state.cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: state.cart,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","initialState","cart","JSON","parse","localStorage","getItem","cartReducer","state","action","type","existingItem","find","item","id","payload","newCart","map","quantity","setItem","stringify","filter","removeItem","CartProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["D:/project modifications/sportshub/client/src/component/context/CartContext.js"],"sourcesContent":["// import React, {createContext, useReducer, useContext, useEffect} from \"react\";\r\n//\r\n// const CartContext = createContext();\r\n//\r\n// const initialState = {\r\n//     cart: JSON.parse(localStorage.getItem('cart')) || [],\r\n// }\r\n//\r\n//\r\n// const cartReducer = (state, action) =>{\r\n//     switch(action.type){\r\n//         case 'ADD_ITEM': {\r\n//             //identify exisitng item\r\n//             const existingItem = state.cart.find(item => item.id === action.payload.id);\r\n//             let newCart;\r\n//\r\n//             if(existingItem){\r\n//                 newCart = state.cart.map(item =>\r\n//                     item.id === action.payload.id\r\n//                         ? {...item, quantity: item.quantity + 1}\r\n//                         : item\r\n//                 );\r\n//             }else {\r\n//                 newCart = [...state.cart, {...action.payload, quantity: 1 }];\r\n//             }\r\n//             localStorage.setItem('cart', JSON.stringify(newCart));\r\n//             return {...state, cart:newCart};\r\n//         }\r\n//\r\n//         case 'REMOVE_ITEM':{\r\n//             const newCart = state.cart.filter(item=> item.id !== action.payload.id);\r\n//             localStorage.setItem('cart', JSON.stringify(newCart));\r\n//             return {...state, cart:newCart};\r\n//         }\r\n//\r\n//         case 'INCREMENT_ITEM': {\r\n//             const newCart = state.cart.map(item=>\r\n//                 item.id === action.payload.id\r\n//                     ? {...item, quantity: item.quantity + 1}\r\n//                     :item\r\n//             );\r\n//             localStorage.setItem('cart', JSON.stringify(newCart));\r\n//             return {...state, cart:newCart};\r\n//         }\r\n//\r\n//         case 'DECREMENT_ITEM': {\r\n//             const newCart = state.cart.map(item =>\r\n//                 item.id === action.payload.id && item.quantity > 1\r\n//                     ? {...item, quantity: item.quantity -1}\r\n//                     :item\r\n//             )\r\n//             localStorage.setItem('cart', JSON.stringify(newCart));\r\n//             return {...state, cart:newCart};\r\n//         }\r\n//\r\n//         case 'CLEAR_CART': {\r\n//             localStorage.removeItem('cart');\r\n//             return {...state, cart:[]};\r\n//         }\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n//\r\n//\r\n//\r\n//\r\n// export const CartProvider = ({children}) => {\r\n//\r\n//     const [state, dispatch] = useReducer(cartReducer, initialState);\r\n//\r\n//\r\n//     useEffect(() =>{\r\n//         localStorage.setItem('cart', JSON.stringify(state.cart));\r\n//     }, [state.cart]);\r\n//\r\n//     return (\r\n//         <CartContext.Provider value={{cart: state.cart, dispatch}}>\r\n//             {children}\r\n//         </CartContext.Provider>\r\n//     )\r\n// }\r\n//\r\n// export const useCart = () => useContext(CartContext);\r\n//\r\n//\r\n\r\n//\r\nimport React, {createContext, useReducer, useContext, useEffect} from \"react\";\r\n\r\nconst CartContext = createContext();\r\n\r\nconst initialState = {\r\n    cart: JSON.parse(localStorage.getItem('cart')) || [],\r\n}\r\n\r\n\r\nconst cartReducer = (state, action) =>{\r\n    switch(action.type){\r\n        case 'ADD_ITEM': {\r\n            //identify exisitng item\r\n            const existingItem = state.cart.find(item => item.id === action.payload.id);\r\n            let newCart;\r\n\r\n            if(existingItem){\r\n                newCart = state.cart.map(item =>\r\n                    item.id === action.payload.id\r\n                        ? {...item, quantity: item.quantity + 1}\r\n                        : item\r\n                );\r\n            }else {\r\n                newCart = [...state.cart, {...action.payload, quantity: 1 }];\r\n            }\r\n            localStorage.setItem('cart', JSON.stringify(newCart));\r\n            return {...state, cart:newCart};\r\n        }\r\n\r\n        case 'REMOVE_ITEM':{\r\n            const newCart = state.cart.filter(item=> item.id !== action.payload.id);\r\n            localStorage.setItem('cart', JSON.stringify(newCart));\r\n            return {...state, cart:newCart};\r\n        }\r\n\r\n        case 'INCREMENT_ITEM': {\r\n            const newCart = state.cart.map(item=>\r\n                item.id === action.payload.id\r\n                    ? {...item, quantity: item.quantity + 1}\r\n                    :item\r\n            );\r\n            localStorage.setItem('cart', JSON.stringify(newCart));\r\n            return {...state, cart:newCart};\r\n        }\r\n\r\n        case 'DECREMENT_ITEM': {\r\n            const newCart = state.cart.map(item =>\r\n                item.id === action.payload.id && item.quantity > 1\r\n                    ? {...item, quantity: item.quantity -1}\r\n                    :item\r\n            )\r\n            localStorage.setItem('cart', JSON.stringify(newCart));\r\n            return {...state, cart:newCart};\r\n        }\r\n\r\n        case 'CLEAR_CART': {\r\n            localStorage.removeItem('cart');\r\n            return {...state, cart:[]};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const CartProvider = ({children}) => {\r\n\r\n    const [state, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n\r\n    useEffect(() =>{\r\n        localStorage.setItem('cart', JSON.stringify(state.cart));\r\n    }, [state.cart]);\r\n\r\n    return (\r\n        <CartContext.Provider value={{cart: state.cart, dispatch}}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,YAAY,GAAG;EACjBC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI;AACtD,CAAC;AAGD,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAI;EAClC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,UAAU;MAAE;QACb;QACA,MAAMC,YAAY,GAAGH,KAAK,CAACN,IAAI,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;QAC3E,IAAIE,OAAO;QAEX,IAAGL,YAAY,EAAC;UACZK,OAAO,GAAGR,KAAK,CAACN,IAAI,CAACe,GAAG,CAACJ,IAAI,IACzBA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,GACvB;YAAC,GAAGD,IAAI;YAAEK,QAAQ,EAAEL,IAAI,CAACK,QAAQ,GAAG;UAAC,CAAC,GACtCL,IACV,CAAC;QACL,CAAC,MAAK;UACFG,OAAO,GAAG,CAAC,GAAGR,KAAK,CAACN,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}