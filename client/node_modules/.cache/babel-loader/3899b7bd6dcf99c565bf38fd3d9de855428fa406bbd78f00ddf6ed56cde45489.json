{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import ApiService from\"../../service/ApiService\";import'../../style/registerPage.css';//\n// const LoginPage = () => {\n//\n//     const [formData, setFormData] = useState({\n//         email: '',\n//         password: ''\n//     });\n//\n//     const [message, setMessage] = useState(null);\n//     const navigate = useNavigate();\n//\n//\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     }\n//\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await ApiService.loginUser(formData);\n//             if (response.status === 200) {\n//                 setMessage(\"User Successfully Loged in\");\n//                 localStorage.setItem('token', response.token);\n//                 localStorage.setItem('role', response.role);\n//                 setTimeout(() => {\n//                     navigate(\"/profile\")\n//                 }, 4000)\n//             }\n//         } catch (error) {\n//             setMessage(error.response?.data.message || error.message || \"unable to Login a user\");\n//         }\n//     }\n//\n//     return (\n//         <div className=\"register-page\">\n//             <h2>Login</h2>\n//             {message && <p className=\"message\">{message}</p>}\n//             <form onSubmit={handleSubmit}>\n//                 <label>Email: </label>\n//                 <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     value={formData.email}\n//                     onChange={handleChange}\n//                     required />\n//\n//                 <label>Password: </label>\n//                 <input\n//                     type=\"password\"\n//                     name=\"password\"\n//                     value={formData.password}\n//                     onChange={handleChange}\n//                     required />\n//\n//                 <button type=\"submit\">Login</button>\n//\n//                 <p className=\"register-link\">\n//                     Don't have an account? <a href=\"/register\">Register</a>\n//                 </p>\n//             </form>\n//         </div>\n//     )\n// }\n//\n// export default LoginPage;\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const[formData,setFormData]=useState({email:'',password:''});const[message,setMessage]=useState(null);const navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleSubmit=async e=>{e.preventDefault();try{const response=await ApiService.loginUser(formData);if(response.status===200){setMessage(\"User Successfully Loged in\");localStorage.setItem('token',response.token);localStorage.setItem('role',response.role);setTimeout(()=>{navigate(\"/profile\");},4000);}}catch(error){var _error$response;setMessage(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data.message)||error.message||\"unable to Login a user\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"register-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Password: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"register-link\",children:[\"Don't have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/register\",children:\"Register\"})]})]})]});};export default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","ApiService","jsx","_jsx","jsxs","_jsxs","LoginPage","formData","setFormData","email","password","message","setMessage","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","loginUser","status","localStorage","setItem","token","role","setTimeout","error","_error$response","data","className","children","onSubmit","type","onChange","required","href"],"sources":["D:/project modifications/sportshub/client/src/component/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ApiService from \"../../service/ApiService\";\r\nimport '../../style/registerPage.css'\r\n\r\n//\r\n// const LoginPage = () => {\r\n//\r\n//     const [formData, setFormData] = useState({\r\n//         email: '',\r\n//         password: ''\r\n//     });\r\n//\r\n//     const [message, setMessage] = useState(null);\r\n//     const navigate = useNavigate();\r\n//\r\n//\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     }\r\n//\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const response = await ApiService.loginUser(formData);\r\n//             if (response.status === 200) {\r\n//                 setMessage(\"User Successfully Loged in\");\r\n//                 localStorage.setItem('token', response.token);\r\n//                 localStorage.setItem('role', response.role);\r\n//                 setTimeout(() => {\r\n//                     navigate(\"/profile\")\r\n//                 }, 4000)\r\n//             }\r\n//         } catch (error) {\r\n//             setMessage(error.response?.data.message || error.message || \"unable to Login a user\");\r\n//         }\r\n//     }\r\n//\r\n//     return (\r\n//         <div className=\"register-page\">\r\n//             <h2>Login</h2>\r\n//             {message && <p className=\"message\">{message}</p>}\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <label>Email: </label>\r\n//                 <input\r\n//                     type=\"email\"\r\n//                     name=\"email\"\r\n//                     value={formData.email}\r\n//                     onChange={handleChange}\r\n//                     required />\r\n//\r\n//                 <label>Password: </label>\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     name=\"password\"\r\n//                     value={formData.password}\r\n//                     onChange={handleChange}\r\n//                     required />\r\n//\r\n//                 <button type=\"submit\">Login</button>\r\n//\r\n//                 <p className=\"register-link\">\r\n//                     Don't have an account? <a href=\"/register\">Register</a>\r\n//                 </p>\r\n//             </form>\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export default LoginPage;\r\n\r\n\r\n\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [message, setMessage] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await ApiService.loginUser(formData);\r\n            if (response.status === 200) {\r\n                setMessage(\"User Successfully Loged in\");\r\n                localStorage.setItem('token', response.token);\r\n                localStorage.setItem('role', response.role);\r\n                setTimeout(() => {\r\n                    navigate(\"/profile\")\r\n                }, 4000)\r\n            }\r\n        } catch (error) {\r\n            setMessage(error.response?.data.message || error.message || \"unable to Login a user\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-page\">\r\n            <h2>Login</h2>\r\n            {message && <p className=\"message\">{message}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Email: </label>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required />\r\n\r\n                <label>Password: </label>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    required />\r\n\r\n                <button type=\"submit\">Login</button>\r\n\r\n                <p className=\"register-link\">\r\n                    Don't have an account? <a href=\"/register\">Register</a>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}