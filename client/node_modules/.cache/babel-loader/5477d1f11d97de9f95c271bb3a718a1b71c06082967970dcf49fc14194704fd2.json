{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ECS\\\\Desktop\\\\Projects\\\\sportshub\\\\client\\\\src\\\\component\\\\future features\\\\MapComponent.jsx\";\n// import React, { useEffect } from 'react';\n// import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\n// import 'leaflet/dist/leaflet.css';\n// import L from 'leaflet';\n// import '../../style/mapComponent.css';\n//\n// const MapComponent = ({ coordinates }) => {\n//     // Fix for marker icon not showing\n//     delete L.Icon.Default.prototype._getIconUrl;\n//     L.Icon.Default.mergeOptions({\n//         iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n//         iconUrl: require('leaflet/dist/images/marker-icon.png'),\n//         shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n//     });\n//\n//     // CenterMap component to update map view when coordinates change\n//     const CenterMap = ({ center }) => {\n//         const map = useMap();\n//         useEffect(() => {\n//             map.setView(center, 13); // Center map on the new coordinates\n//         }, [center]);\n//         return null;\n//     };\n//\n//     return (\n//         <div className=\"map-container\">\n//             <MapContainer center={coordinates ? [coordinates.lat, coordinates.lng] : [18.520430, 73.856743]} zoom={13} className=\"map\">\n//                 <TileLayer\n//                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//                     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n//                 />\n//                 <Marker position={[coordinates.lat, coordinates.lng]}>\n//                     <Popup>\n//                         Your selected location based on address!\n//                     </Popup>\n//                 </Marker>\n//                 <CenterMap center={[coordinates.lat, coordinates.lng]} />\n//             </MapContainer>\n//         </div>\n//     );\n// };\n//\n// export default MapComponent;\n\nimport React, { useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport '../../style/mapComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  coordinates\n}) => {\n  var _s = $RefreshSig$();\n  // Fix for marker icon not showing\n  delete L.Icon.Default.prototype._getIconUrl;\n  L.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n  });\n\n  // Center the map on the provided coordinates\n  const CenterMap = ({\n    center\n  }) => {\n    _s();\n    const map = useMap();\n    useEffect(() => {\n      map.setView(center, 15); // Higher zoom level for street-level view\n    }, [center]);\n    return null;\n  };\n  _s(CenterMap, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n    return [useMap];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: coordinates ? [coordinates.lat, coordinates.lng] : [18.5204, 73.8567],\n      zoom: 15,\n      className: \"map\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [coordinates.lat, coordinates.lng],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: `Street: ${coordinates.street || \"\"}, City: ${coordinates.city || \"\"}, State: ${coordinates.state || \"\"}, Zip: ${coordinates.zipCode || \"\"}, Country: ${coordinates.country || \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CenterMap, {\n        center: [coordinates.lat, coordinates.lng]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","MapContainer","TileLayer","Marker","Popup","useMap","L","jsxDEV","_jsxDEV","MapComponent","coordinates","_s","$RefreshSig$","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","CenterMap","center","map","setView","className","children","lat","lng","zoom","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","street","city","state","zipCode","country","_c","$RefreshReg$"],"sources":["C:/Users/ECS/Desktop/Projects/sportshub/client/src/component/future features/MapComponent.jsx"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\n// import 'leaflet/dist/leaflet.css';\r\n// import L from 'leaflet';\r\n// import '../../style/mapComponent.css';\r\n//\r\n// const MapComponent = ({ coordinates }) => {\r\n//     // Fix for marker icon not showing\r\n//     delete L.Icon.Default.prototype._getIconUrl;\r\n//     L.Icon.Default.mergeOptions({\r\n//         iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n//         iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n//         shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n//     });\r\n//\r\n//     // CenterMap component to update map view when coordinates change\r\n//     const CenterMap = ({ center }) => {\r\n//         const map = useMap();\r\n//         useEffect(() => {\r\n//             map.setView(center, 13); // Center map on the new coordinates\r\n//         }, [center]);\r\n//         return null;\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"map-container\">\r\n//             <MapContainer center={coordinates ? [coordinates.lat, coordinates.lng] : [18.520430, 73.856743]} zoom={13} className=\"map\">\r\n//                 <TileLayer\r\n//                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//                     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n//                 />\r\n//                 <Marker position={[coordinates.lat, coordinates.lng]}>\r\n//                     <Popup>\r\n//                         Your selected location based on address!\r\n//                     </Popup>\r\n//                 </Marker>\r\n//                 <CenterMap center={[coordinates.lat, coordinates.lng]} />\r\n//             </MapContainer>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default MapComponent;\r\n\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport '../../style/mapComponent.css';\r\n\r\nconst MapComponent = ({ coordinates }) => {\r\n    // Fix for marker icon not showing\r\n    delete L.Icon.Default.prototype._getIconUrl;\r\n    L.Icon.Default.mergeOptions({\r\n        iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n        iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n        shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n    });\r\n\r\n    // Center the map on the provided coordinates\r\n    const CenterMap = ({ center }) => {\r\n        const map = useMap();\r\n        useEffect(() => {\r\n            map.setView(center, 15); // Higher zoom level for street-level view\r\n        }, [center]);\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className=\"map-container\">\r\n            <MapContainer center={coordinates ? [coordinates.lat, coordinates.lng] : [18.5204, 73.8567]} zoom={15} className=\"map\">\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                />\r\n                <Marker position={[coordinates.lat, coordinates.lng]}>\r\n                    <Popup>\r\n                        {`Street: ${coordinates.street || \"\"}, City: ${coordinates.city || \"\"}, State: ${coordinates.state || \"\"}, Zip: ${coordinates.zipCode || \"\"}, Country: ${coordinates.country || \"\"}`}\r\n                    </Popup>\r\n                </Marker>\r\n                <CenterMap center={[coordinates.lat, coordinates.lng]} />\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapComponent;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}