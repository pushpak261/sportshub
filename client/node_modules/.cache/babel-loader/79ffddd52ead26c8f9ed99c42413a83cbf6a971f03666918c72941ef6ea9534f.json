{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ECS\\\\Desktop\\\\Projects\\\\sportshub\\\\client\\\\src\\\\component\\\\pages\\\\CartPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import { useCart } from \"../context/CartContext\";\n// import '../../style/cartPage.css'\n//\n// const CartPage = () => {\n//     const { cart, dispatch } = useCart();\n//     const [message, setMessage] = useState(null);\n//     const navigate = useNavigate();\n//\n//\n//     const incrementItem = (product) => {\n//         dispatch({ type: 'INCREMENT_ITEM', payload: product });\n//     }\n//\n//     const decrementItem = (product) => {\n//\n//         const cartItem = cart.find(item => item.id === product.id);\n//         if (cartItem && cartItem.quantity > 1) {\n//             dispatch({ type: 'DECREMENT_ITEM', payload: product });\n//         } else {\n//             dispatch({ type: 'REMOVE_ITEM', payload: product });\n//         }\n//     }\n//\n//     const totalPrice = cart.reduce((total, item) => total + item.price * item.quantity, 0);\n//\n//\n//\n//     const handleCheckout = async () => {\n//         if (!ApiService.isAuthenticated()) {\n//             setMessage(\"You need to login first before you can place an order\");\n//             setTimeout(() => {\n//                 setMessage('')\n//                 navigate(\"/login\")\n//             }, 3000);\n//             return;\n//         }\n//\n//         const orderItems = cart.map(item => ({\n//             productId: item.id,\n//             quantity: item.quantity\n//         }));\n//\n//         const orderRequest = {\n//             totalPrice,\n//             items: orderItems,\n//         }\n//\n//         try {\n//             const response = await ApiService.createOrder(orderRequest);\n//             setMessage(response.message)\n//\n//             setTimeout(() => {\n//                 setMessage('')\n//             }, 5000);\n//\n//             if (response.status === 200) {\n//                 dispatch({ type: 'CLEAR_CART' })\n//             }\n//\n//         } catch (error) {\n//             setMessage(error.response?.data?.message || error.message || 'Failed to place an order');\n//             setTimeout(() => {\n//                 setMessage('')\n//             }, 3000);\n//\n//         }\n//\n//     };\n//\n//\n//     return (\n//         <div className=\"cart-page\">\n//             <h1>Cart</h1>\n//             {message && <p className=\"response-message\">{message}</p>}\n//\n//             {cart.length === 0 ? (\n//                 <p>Your cart is empty</p>\n//             ) : (\n//                 <div>\n//                     <ul>\n//                         {cart.map(item => (\n//                             <li key={item.id}>\n//                                 <img src={item.imageUrl} alt={item.name} />\n//                                 <div>\n//                                     <h2>{item.name}</h2>\n//                                     <p>{item.description}</p>\n//                                     <div className=\"quantity-controls\">\n//                                         <button onClick={()=> decrementItem(item)}>-</button>\n//                                         <span>{item.quantity}</span>\n//                                         <button onClick={()=> incrementItem(item)}>+</button>\n//                                     </div>\n//                                     <span>${item.price.toFixed()}</span>\n//                                 </div>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                     <h2>Total: ${totalPrice.toFixed(2)}</h2>\n//                     <button className=\"checkout-button\" onClick={handleCheckout}>Checkout</button>\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n//\n// export default CartPage;\n\n/////////////////////////////////////////////\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useLocation } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n// import { useCart } from \"../context/CartContext\";\n// import PayPalButton from '../../component/future features/PayPalButton'; // Import your PayPalButton\n// import '../../style/cartPage.css';\n//\n// const CartPage = () => {\n//     const { cart, dispatch } = useCart();\n//     const [message, setMessage] = useState(null);\n//     const [openPayPal, setOpenPayPal] = useState(false);\n//     const navigate = useNavigate();\n//     const location = useLocation();\n//\n//     const incrementItem = (product) => {\n//         dispatch({ type: 'INCREMENT_ITEM', payload: product });\n//     };\n//\n//     const decrementItem = (product) => {\n//         const cartItem = cart.find(item => item.id === product.id);\n//         if (cartItem && cartItem.quantity > 1) {\n//             dispatch({ type: 'DECREMENT_ITEM', payload: product });\n//         } else {\n//             dispatch({ type: 'REMOVE_ITEM', payload: product });\n//         }\n//     };\n//\n//     const totalPrice = cart.reduce((total, item) => total + item.price * item.quantity, 0);\n//\n//     useEffect(() => {\n//         if (location.state && location.state.addressSaved) {\n//             setOpenPayPal(true); // Open PayPal if the address was just saved\n//         }\n//     }, [location.state]);\n//\n//     return (\n//         <div className=\"cart-page\">\n//             <h1>Cart</h1>\n//             {message && <p className=\"response-message\">{message}</p>}\n//\n//             {cart.length === 0 ? (\n//                 <p>Your cart is empty</p>\n//             ) : (\n//                 <div>\n//                     <ul>\n//                         {cart.map(item => (\n//                             <li key={item.id} className=\"cart-item\">\n//                                 <img src={item.imageUrl} alt={item.name} />\n//                                 <div className=\"cart-item-details\">\n//                                     <h2>{item.name}</h2>\n//                                     <p>{item.description}</p>\n//                                     <span>${item.price.toFixed(2)}</span>\n//                                 </div>\n//                                 <div className=\"quantity-controls\">\n//                                     <button onClick={() => decrementItem(item)}>-</button>\n//                                     <span>{item.quantity}</span>\n//                                     <button onClick={() => incrementItem(item)}>+</button>\n//                                 </div>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                     <h2>Total: ${totalPrice.toFixed(2)}</h2>\n//                     {openPayPal ? (\n//                         <PayPalButton totalAmount={totalPrice} /> // Open PayPal directly if address was saved\n//                     ) : (\n//                         <button onClick={() => navigate('/add-address')} className=\"add-address-button\">\n//                             Add Address\n//                         </button> // Button to add address\n//                     )}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n//\n// export default CartPage;\n//\n//\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport { useCart } from \"../context/CartContext\";\nimport PayPalButton from '../../component/future features/PayPalButton'; // Import your PayPalButton\nimport '../../style/cartPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartPage = () => {\n  _s();\n  const {\n    cart,\n    dispatch\n  } = useCart();\n  const [message, setMessage] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState(null); // State to manage selected payment method\n  const navigate = useNavigate();\n  const incrementItem = product => {\n    dispatch({\n      type: 'INCREMENT_ITEM',\n      payload: product\n    });\n  };\n  const decrementItem = product => {\n    const cartItem = cart.find(item => item.id === product.id);\n    if (cartItem && cartItem.quantity > 1) {\n      dispatch({\n        type: 'DECREMENT_ITEM',\n        payload: product\n      });\n    } else {\n      dispatch({\n        type: 'REMOVE_ITEM',\n        payload: product\n      });\n    }\n  };\n  const totalPrice = cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  const handleCheckout = async () => {\n    if (paymentMethod === 'paypal') {\n      // Navigate to PayPal or handle PayPal logic\n    } else if (paymentMethod === 'cod') {\n      // Navigate to the order confirmation page\n      navigate('/order-confirmation');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cart.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"cart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imageUrl,\n            alt: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-item-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", item.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quantity-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => decrementItem(item),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => incrementItem(item),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total: $\", totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"paypal\",\n            checked: paymentMethod === 'paypal',\n            onChange: () => setPaymentMethod('paypal')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), \"PayPal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"cod\",\n            checked: paymentMethod === 'cod',\n            onChange: () => setPaymentMethod('cod')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), \"Cash on Delivery\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"checkout-button\",\n        onClick: handleCheckout,\n        children: \"Proceed to Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n};\n_s(CartPage, \"mZQlTFixMV2BgLW4t8rPusiTHpQ=\", false, function () {\n  return [useCart, useNavigate];\n});\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useState","useNavigate","ApiService","useCart","PayPalButton","jsxDEV","_jsxDEV","CartPage","_s","cart","dispatch","message","setMessage","paymentMethod","setPaymentMethod","navigate","incrementItem","product","type","payload","decrementItem","cartItem","find","item","id","quantity","totalPrice","reduce","total","price","handleCheckout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","imageUrl","alt","name","description","toFixed","onClick","value","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/ECS/Desktop/Projects/sportshub/client/src/component/pages/CartPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import ApiService from \"../../service/ApiService\";\r\n// import { useCart } from \"../context/CartContext\";\r\n// import '../../style/cartPage.css'\r\n//\r\n// const CartPage = () => {\r\n//     const { cart, dispatch } = useCart();\r\n//     const [message, setMessage] = useState(null);\r\n//     const navigate = useNavigate();\r\n//\r\n//\r\n//     const incrementItem = (product) => {\r\n//         dispatch({ type: 'INCREMENT_ITEM', payload: product });\r\n//     }\r\n//\r\n//     const decrementItem = (product) => {\r\n//\r\n//         const cartItem = cart.find(item => item.id === product.id);\r\n//         if (cartItem && cartItem.quantity > 1) {\r\n//             dispatch({ type: 'DECREMENT_ITEM', payload: product });\r\n//         } else {\r\n//             dispatch({ type: 'REMOVE_ITEM', payload: product });\r\n//         }\r\n//     }\r\n//\r\n//     const totalPrice = cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n//\r\n//\r\n//\r\n//     const handleCheckout = async () => {\r\n//         if (!ApiService.isAuthenticated()) {\r\n//             setMessage(\"You need to login first before you can place an order\");\r\n//             setTimeout(() => {\r\n//                 setMessage('')\r\n//                 navigate(\"/login\")\r\n//             }, 3000);\r\n//             return;\r\n//         }\r\n//\r\n//         const orderItems = cart.map(item => ({\r\n//             productId: item.id,\r\n//             quantity: item.quantity\r\n//         }));\r\n//\r\n//         const orderRequest = {\r\n//             totalPrice,\r\n//             items: orderItems,\r\n//         }\r\n//\r\n//         try {\r\n//             const response = await ApiService.createOrder(orderRequest);\r\n//             setMessage(response.message)\r\n//\r\n//             setTimeout(() => {\r\n//                 setMessage('')\r\n//             }, 5000);\r\n//\r\n//             if (response.status === 200) {\r\n//                 dispatch({ type: 'CLEAR_CART' })\r\n//             }\r\n//\r\n//         } catch (error) {\r\n//             setMessage(error.response?.data?.message || error.message || 'Failed to place an order');\r\n//             setTimeout(() => {\r\n//                 setMessage('')\r\n//             }, 3000);\r\n//\r\n//         }\r\n//\r\n//     };\r\n//\r\n//\r\n//     return (\r\n//         <div className=\"cart-page\">\r\n//             <h1>Cart</h1>\r\n//             {message && <p className=\"response-message\">{message}</p>}\r\n//\r\n//             {cart.length === 0 ? (\r\n//                 <p>Your cart is empty</p>\r\n//             ) : (\r\n//                 <div>\r\n//                     <ul>\r\n//                         {cart.map(item => (\r\n//                             <li key={item.id}>\r\n//                                 <img src={item.imageUrl} alt={item.name} />\r\n//                                 <div>\r\n//                                     <h2>{item.name}</h2>\r\n//                                     <p>{item.description}</p>\r\n//                                     <div className=\"quantity-controls\">\r\n//                                         <button onClick={()=> decrementItem(item)}>-</button>\r\n//                                         <span>{item.quantity}</span>\r\n//                                         <button onClick={()=> incrementItem(item)}>+</button>\r\n//                                     </div>\r\n//                                     <span>${item.price.toFixed()}</span>\r\n//                                 </div>\r\n//                             </li>\r\n//                         ))}\r\n//                     </ul>\r\n//                     <h2>Total: ${totalPrice.toFixed(2)}</h2>\r\n//                     <button className=\"checkout-button\" onClick={handleCheckout}>Checkout</button>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export default CartPage;\r\n\r\n\r\n/////////////////////////////////////////////\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate, useLocation } from \"react-router-dom\";\r\n// import ApiService from \"../../service/ApiService\";\r\n// import { useCart } from \"../context/CartContext\";\r\n// import PayPalButton from '../../component/future features/PayPalButton'; // Import your PayPalButton\r\n// import '../../style/cartPage.css';\r\n//\r\n// const CartPage = () => {\r\n//     const { cart, dispatch } = useCart();\r\n//     const [message, setMessage] = useState(null);\r\n//     const [openPayPal, setOpenPayPal] = useState(false);\r\n//     const navigate = useNavigate();\r\n//     const location = useLocation();\r\n//\r\n//     const incrementItem = (product) => {\r\n//         dispatch({ type: 'INCREMENT_ITEM', payload: product });\r\n//     };\r\n//\r\n//     const decrementItem = (product) => {\r\n//         const cartItem = cart.find(item => item.id === product.id);\r\n//         if (cartItem && cartItem.quantity > 1) {\r\n//             dispatch({ type: 'DECREMENT_ITEM', payload: product });\r\n//         } else {\r\n//             dispatch({ type: 'REMOVE_ITEM', payload: product });\r\n//         }\r\n//     };\r\n//\r\n//     const totalPrice = cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n//\r\n//     useEffect(() => {\r\n//         if (location.state && location.state.addressSaved) {\r\n//             setOpenPayPal(true); // Open PayPal if the address was just saved\r\n//         }\r\n//     }, [location.state]);\r\n//\r\n//     return (\r\n//         <div className=\"cart-page\">\r\n//             <h1>Cart</h1>\r\n//             {message && <p className=\"response-message\">{message}</p>}\r\n//\r\n//             {cart.length === 0 ? (\r\n//                 <p>Your cart is empty</p>\r\n//             ) : (\r\n//                 <div>\r\n//                     <ul>\r\n//                         {cart.map(item => (\r\n//                             <li key={item.id} className=\"cart-item\">\r\n//                                 <img src={item.imageUrl} alt={item.name} />\r\n//                                 <div className=\"cart-item-details\">\r\n//                                     <h2>{item.name}</h2>\r\n//                                     <p>{item.description}</p>\r\n//                                     <span>${item.price.toFixed(2)}</span>\r\n//                                 </div>\r\n//                                 <div className=\"quantity-controls\">\r\n//                                     <button onClick={() => decrementItem(item)}>-</button>\r\n//                                     <span>{item.quantity}</span>\r\n//                                     <button onClick={() => incrementItem(item)}>+</button>\r\n//                                 </div>\r\n//                             </li>\r\n//                         ))}\r\n//                     </ul>\r\n//                     <h2>Total: ${totalPrice.toFixed(2)}</h2>\r\n//                     {openPayPal ? (\r\n//                         <PayPalButton totalAmount={totalPrice} /> // Open PayPal directly if address was saved\r\n//                     ) : (\r\n//                         <button onClick={() => navigate('/add-address')} className=\"add-address-button\">\r\n//                             Add Address\r\n//                         </button> // Button to add address\r\n//                     )}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default CartPage;\r\n//\r\n//\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ApiService from \"../../service/ApiService\";\r\nimport { useCart } from \"../context/CartContext\";\r\nimport PayPalButton from '../../component/future features/PayPalButton'; // Import your PayPalButton\r\nimport '../../style/cartPage.css';\r\n\r\nconst CartPage = () => {\r\n    const { cart, dispatch } = useCart();\r\n    const [message, setMessage] = useState(null);\r\n    const [paymentMethod, setPaymentMethod] = useState(null); // State to manage selected payment method\r\n    const navigate = useNavigate();\r\n\r\n    const incrementItem = (product) => {\r\n        dispatch({ type: 'INCREMENT_ITEM', payload: product });\r\n    };\r\n\r\n    const decrementItem = (product) => {\r\n        const cartItem = cart.find(item => item.id === product.id);\r\n        if (cartItem && cartItem.quantity > 1) {\r\n            dispatch({ type: 'DECREMENT_ITEM', payload: product });\r\n        } else {\r\n            dispatch({ type: 'REMOVE_ITEM', payload: product });\r\n        }\r\n    };\r\n\r\n    const totalPrice = cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n\r\n    const handleCheckout = async () => {\r\n        if (paymentMethod === 'paypal') {\r\n            // Navigate to PayPal or handle PayPal logic\r\n        } else if (paymentMethod === 'cod') {\r\n            // Navigate to the order confirmation page\r\n            navigate('/order-confirmation');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-page\">\r\n            <h1>Cart</h1>\r\n            {message && <p className=\"response-message\">{message}</p>}\r\n\r\n            {cart.length === 0 ? (\r\n                <p>Your cart is empty</p>\r\n            ) : (\r\n                <div>\r\n                    <ul>\r\n                        {cart.map(item => (\r\n                            <li key={item.id} className=\"cart-item\">\r\n                                <img src={item.imageUrl} alt={item.name} />\r\n                                <div className=\"cart-item-details\">\r\n                                    <h2>{item.name}</h2>\r\n                                    <p>{item.description}</p>\r\n                                    <span>${item.price.toFixed(2)}</span>\r\n                                </div>\r\n                                <div className=\"quantity-controls\">\r\n                                    <button onClick={() => decrementItem(item)}>-</button>\r\n                                    <span>{item.quantity}</span>\r\n                                    <button onClick={() => incrementItem(item)}>+</button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <h2>Total: ${totalPrice.toFixed(2)}</h2>\r\n                    <div>\r\n                        <h3>Select Payment Method</h3>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"paypal\"\r\n                                checked={paymentMethod === 'paypal'}\r\n                                onChange={() => setPaymentMethod('paypal')}\r\n                            />\r\n                            PayPal\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"cod\"\r\n                                checked={paymentMethod === 'cod'}\r\n                                onChange={() => setPaymentMethod('cod')}\r\n                            />\r\n                            Cash on Delivery\r\n                        </label>\r\n                    </div>\r\n                    <button className=\"checkout-button\" onClick={handleCheckout}>\r\n                        Proceed to Checkout\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartPage;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}