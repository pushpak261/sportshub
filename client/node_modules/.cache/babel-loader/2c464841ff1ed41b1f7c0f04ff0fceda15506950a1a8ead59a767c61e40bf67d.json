{"ast":null,"code":"// import React, {useEffect, useState} from \"react\";\n// import { useLocation } from \"react-router-dom\";\n// import ProductList from \"../common/ProductList\";\n// import Pagination from \"../common/Pagination\";\n// import ApiService from \"../../service/ApiService\";\n// import '../../style/homePage.css';\n//\n//\n// const HomePage = () => {\n//     const location = useLocation();\n//     const [products, setProducts] = useState([]);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [totalPages, setTotalPages] = useState(0);\n//     const [error, setError] = useState(null);\n//     const itemsPerPage = 10;\n//\n//     useEffect(()=> {\n//\n//         const fetchProducts = async () => {\n//             try{\n//                 let allProducts = [];\n//                 const queryparams = new URLSearchParams(location.search);\n//                 const searchItem = queryparams.get('search')\n//\n//                 if (searchItem) {\n//                     const response = await ApiService.searchProducts(searchItem);\n//                     allProducts = response.productList || [];\n//                 }else{\n//                     const response = await ApiService.getAllProducts();\n//                     allProducts = response.productList || [];\n//\n//                 }\n//\n//                 setTotalPages(Math.ceil(allProducts.length/itemsPerPage));\n//                 setProducts(allProducts.slice((currentPage -1) * itemsPerPage, currentPage * itemsPerPage));\n//\n//             }catch(error){\n//                 setError(error.response?.data?.message || error.message || 'unable to fetch products')\n//             }\n//         }\n//\n//         fetchProducts();\n//\n//     },[location.search, currentPage])\n//\n//\n//     return(\n//         <div className=\"home\">\n//             {error ? (\n//                 <p className=\"error-message\">{error}</p>\n//             ):(\n//                 <div>\n//                     <ProductList products={products}/>\n//                     <Pagination  currentPage={currentPage}\n//                                  totalPages={totalPages}\n//                                  onPageChange={(page)=> setCurrentPage(page)}/>\n//                 </div>\n//             )}\n//         </div>\n//     )\n//\n//\n// }\n//\n// export default HomePage;\n//\n//\n//","map":{"version":3,"names":[],"sources":["C:/Users/ECS/Desktop/Projects/sportshub/client/src/component/pages/HomePage.jsx"],"sourcesContent":["// import React, {useEffect, useState} from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import ProductList from \"../common/ProductList\";\r\n// import Pagination from \"../common/Pagination\";\r\n// import ApiService from \"../../service/ApiService\";\r\n// import '../../style/homePage.css';\r\n//\r\n//\r\n// const HomePage = () => {\r\n//     const location = useLocation();\r\n//     const [products, setProducts] = useState([]);\r\n//     const [currentPage, setCurrentPage] = useState(1);\r\n//     const [totalPages, setTotalPages] = useState(0);\r\n//     const [error, setError] = useState(null);\r\n//     const itemsPerPage = 10;\r\n//\r\n//     useEffect(()=> {\r\n//\r\n//         const fetchProducts = async () => {\r\n//             try{\r\n//                 let allProducts = [];\r\n//                 const queryparams = new URLSearchParams(location.search);\r\n//                 const searchItem = queryparams.get('search')\r\n//\r\n//                 if (searchItem) {\r\n//                     const response = await ApiService.searchProducts(searchItem);\r\n//                     allProducts = response.productList || [];\r\n//                 }else{\r\n//                     const response = await ApiService.getAllProducts();\r\n//                     allProducts = response.productList || [];\r\n//\r\n//                 }\r\n//\r\n//                 setTotalPages(Math.ceil(allProducts.length/itemsPerPage));\r\n//                 setProducts(allProducts.slice((currentPage -1) * itemsPerPage, currentPage * itemsPerPage));\r\n//\r\n//             }catch(error){\r\n//                 setError(error.response?.data?.message || error.message || 'unable to fetch products')\r\n//             }\r\n//         }\r\n//\r\n//         fetchProducts();\r\n//\r\n//     },[location.search, currentPage])\r\n//\r\n//\r\n//     return(\r\n//         <div className=\"home\">\r\n//             {error ? (\r\n//                 <p className=\"error-message\">{error}</p>\r\n//             ):(\r\n//                 <div>\r\n//                     <ProductList products={products}/>\r\n//                     <Pagination  currentPage={currentPage}\r\n//                                  totalPages={totalPages}\r\n//                                  onPageChange={(page)=> setCurrentPage(page)}/>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     )\r\n//\r\n//\r\n// }\r\n//\r\n// export default HomePage;\r\n//\r\n//\r\n//\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}