{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ECS\\\\Desktop\\\\Projects\\\\sportshub\\\\client\\\\src\\\\component\\\\future features\\\\MapComponent.jsx\";\n// src/components/MapComponent.js\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Set the default icon for markers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst MapComponent = ({\n  address\n}) => {\n  // Set default coordinates\n  const position = [0, 0]; // Default position\n  if (address.street && address.city && address.state) {\n    // Update position based on address (replace with actual coordinates if available)\n    position[0] = address.latitude; // Replace with actual latitude\n    position[1] = address.longitude; // Replace with actual longitude\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: position,\n    zoom: 13,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [address.street, \", \", address.city, \", \", address.state, \", \", address.zipCode, \", \", address.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapComponent","address","position","street","city","state","latitude","longitude","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","zipCode","country","_c","$RefreshReg$"],"sources":["C:/Users/ECS/Desktop/Projects/sportshub/client/src/component/future features/MapComponent.jsx"],"sourcesContent":["// src/components/MapComponent.js\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\n// Set the default icon for markers\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst MapComponent = ({ address }) => {\r\n    // Set default coordinates\r\n    const position = [0, 0]; // Default position\r\n    if (address.street && address.city && address.state) {\r\n        // Update position based on address (replace with actual coordinates if available)\r\n        position[0] = address.latitude; // Replace with actual latitude\r\n        position[1] = address.longitude; // Replace with actual longitude\r\n    }\r\n\r\n    return (\r\n        <MapContainer center={position} zoom={13} style={{ height: '400px', width: '100%' }}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <Marker position={position}>\r\n                <Popup>\r\n                    {address.street}, {address.city}, {address.state}, {address.zipCode}, {address.country}\r\n                </Popup>\r\n            </Marker>\r\n        </MapContainer>\r\n    );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOF,CAAC,CAACG,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CN,CAAC,CAACG,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EACxBC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEC,OAAO,EAAED,OAAO,CAAC,qCAAqC,CAAC;EACvDE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC9D,CAAC,CAAC;AAEF,MAAMG,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAClC;EACA,MAAMC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACzB,IAAID,OAAO,CAACE,MAAM,IAAIF,OAAO,CAACG,IAAI,IAAIH,OAAO,CAACI,KAAK,EAAE;IACjD;IACAH,QAAQ,CAAC,CAAC,CAAC,GAAGD,OAAO,CAACK,QAAQ,CAAC,CAAC;IAChCJ,QAAQ,CAAC,CAAC,CAAC,GAAGD,OAAO,CAACM,SAAS,CAAC,CAAC;EACrC;EAEA,oBACIjB,OAAA,CAACN,YAAY;IAACwB,MAAM,EAAEN,QAAS;IAACO,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChFvB,OAAA,CAACL,SAAS;MACN6B,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxG,CAAC,eACF7B,OAAA,CAACJ,MAAM;MAACgB,QAAQ,EAAEA,QAAS;MAAAW,QAAA,eACvBvB,OAAA,CAACH,KAAK;QAAA0B,QAAA,GACDZ,OAAO,CAACE,MAAM,EAAC,IAAE,EAACF,OAAO,CAACG,IAAI,EAAC,IAAE,EAACH,OAAO,CAACI,KAAK,EAAC,IAAE,EAACJ,OAAO,CAACmB,OAAO,EAAC,IAAE,EAACnB,OAAO,CAACoB,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEvB,CAAC;AAACG,EAAA,GAtBItB,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}