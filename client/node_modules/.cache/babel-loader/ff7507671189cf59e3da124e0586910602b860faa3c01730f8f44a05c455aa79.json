{"ast":null,"code":"import React from'react';import{PayPalScriptProvider,PayPalButtons}from\"@paypal/react-paypal-js\";import{jsx as _jsx}from\"react/jsx-runtime\";const PayPalButton=_ref=>{let{totalAmount}=_ref;return/*#__PURE__*/_jsx(PayPalScriptProvider,{options:{\"client-id\":\"AQnZkbeWlWUtMrejlLoVqUf8d1bIlK28dOsb2vKrtjQ0lEvX8C5g1OowLPbKonCUmF0W_0zp7SvFw5VN\"},children:/*#__PURE__*/_jsx(PayPalButtons,{createOrder:(data,actions)=>{return actions.order.create({purchase_units:[{amount:{value:totalAmount.toFixed(2)// Use the total amount from props\n}}]});},onApprove:async(data,actions)=>{const order=await actions.order.capture();alert('Transaction completed by '+order.payer.name.given_name);// Optionally, you can clear the cart or redirect after successful payment\n},onError:err=>{console.error('PayPal Checkout onError',err);}})});};export default PayPalButton;","map":{"version":3,"names":["React","PayPalScriptProvider","PayPalButtons","jsx","_jsx","PayPalButton","_ref","totalAmount","options","children","createOrder","data","actions","order","create","purchase_units","amount","value","toFixed","onApprove","capture","alert","payer","name","given_name","onError","err","console","error"],"sources":["D:/project modifications/sportshub/client/src/component/future features/PayPalButton.jsx"],"sourcesContent":["import React from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nconst PayPalButton = ({ totalAmount }) => {\r\n    return (\r\n        <PayPalScriptProvider options={{ \"client-id\": \"AQnZkbeWlWUtMrejlLoVqUf8d1bIlK28dOsb2vKrtjQ0lEvX8C5g1OowLPbKonCUmF0W_0zp7SvFw5VN\" }}>\r\n            <PayPalButtons\r\n                createOrder={(data, actions) => {\r\n                    return actions.order.create({\r\n                        purchase_units: [{\r\n                            amount: {\r\n                                value: totalAmount.toFixed(2), // Use the total amount from props\r\n                            },\r\n                        }],\r\n                    });\r\n                }}\r\n                onApprove={async (data, actions) => {\r\n                    const order = await actions.order.capture();\r\n                    alert('Transaction completed by ' + order.payer.name.given_name);\r\n                    // Optionally, you can clear the cart or redirect after successful payment\r\n                }}\r\n                onError={(err) => {\r\n                    console.error('PayPal Checkout onError', err);\r\n                }}\r\n            />\r\n        </PayPalScriptProvider>\r\n    );\r\n};\r\n\r\nexport default PayPalButton;\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,oBAAoB,CAAEC,aAAa,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAqB,IAApB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CACjC,mBACIF,IAAA,CAACH,oBAAoB,EAACO,OAAO,CAAE,CAAE,WAAW,CAAE,kFAAmF,CAAE,CAAAC,QAAA,cAC/HL,IAAA,CAACF,aAAa,EACVQ,WAAW,CAAEA,CAACC,IAAI,CAAEC,OAAO,GAAK,CAC5B,MAAO,CAAAA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC,CACxBC,cAAc,CAAE,CAAC,CACbC,MAAM,CAAE,CACJC,KAAK,CAAEV,WAAW,CAACW,OAAO,CAAC,CAAC,CAAG;AACnC,CACJ,CAAC,CACL,CAAC,CAAC,CACN,CAAE,CACFC,SAAS,CAAE,KAAAA,CAAOR,IAAI,CAAEC,OAAO,GAAK,CAChC,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAD,OAAO,CAACC,KAAK,CAACO,OAAO,CAAC,CAAC,CAC3CC,KAAK,CAAC,2BAA2B,CAAGR,KAAK,CAACS,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC,CAChE;AACJ,CAAE,CACFC,OAAO,CAAGC,GAAG,EAAK,CACdC,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAEF,GAAG,CAAC,CACjD,CAAE,CACL,CAAC,CACgB,CAAC,CAE/B,CAAC,CAED,cAAe,CAAArB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}