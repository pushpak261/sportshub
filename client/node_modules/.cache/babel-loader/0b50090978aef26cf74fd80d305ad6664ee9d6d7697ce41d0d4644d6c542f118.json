{"ast":null,"code":"//\n// import axios from \"axios\";\n//\n// export default class ApiService {\n//\n//     //Here  I had used No Ip dns bcz when I stopped instance so it will automatically configure with instance ip address.\n//     // static BASE_URL = \"http://sportsclub.ddns.net:2424\";\n//\n//\n//\n//     // static BASE_URL = \"http://13.201.81.16:2424\";\n//     //\n//     //ec2-13-201-81-16.ap-south-1.compute.amazonaws.com\n//\n//     static BASE_URL = \"http://localhost:2424\";\n//\n//\n//\n//\n//\n//\n//     static getHeader() {\n//         const token = localStorage.getItem(\"token\");\n//         return {\n//             Authorization: `Bearer ${token}`,\n//             \"Content-Type\": \"application/json\"\n//         };\n//     }\n//\n//     /**AUTh && USERS API */\n//     static async registerUser(registration) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration)\n//         return response.data;\n//     }\n//\n//\n//     static async loginUser(loginDetails) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails)\n//         return response.data;\n//     }\n//\n//\n//     static async getLoggedInUserInfo() {\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//\n//     /**PRODUCT ENDPOINT */\n//\n//     static async addProduct(formData) {\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateProduct(formData) {\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProducts() {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`)\n//         return response.data;\n//     }\n//\n//     static async searchProducts(searchValue) {\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\n//             params: { searchValue }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProductsByCategoryId(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-category-id/${categoryId}`)\n//         return response.data;\n//     }\n//\n//     static async getProductById(productId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`)\n//         return response.data;\n//     }\n//\n//     static async deleteProduct(productId) {\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /**CATEGORY */\n//     static async createCategory(body) {\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     static async getAllCategory() {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`)\n//         return response.data;\n//     }\n//\n//     static async getCategoryById(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`)\n//         return response.data;\n//     }\n//\n//     static async updateCategory(categoryId, body) {\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     static async deleteCategory(categoryId) {\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     /**ORDEDR */\n//     static async createOrder(body) {\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     static async getAllOrders() {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     static async getOrderItemById(itemId) {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader(),\n//             params: {itemId}\n//         })\n//         return response.data;\n//     }\n//\n//     static async getAllOrderItemsByStatus(status) {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader(),\n//             params: {status}\n//         })\n//         return response.data;\n//     }\n//\n//     static async updateOrderitemStatus(orderItemId, status) {\n//         const response = await axios.put(`${this.BASE_URL}/order/update-item-status/${orderItemId}`, {}, {\n//             headers: this.getHeader(),\n//             params: {status}\n//         })\n//         return response.data;\n//     }\n//\n//\n//\n//\n//     /**ADDRESS */\n//     static async saveAddress(body) {\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\n//             headers: this.getHeader()\n//         })\n//         return response.data;\n//     }\n//\n//     /***AUTHEMNTICATION CHECKER */\n//     static logout(){\n//         localStorage.removeItem('token')\n//         localStorage.removeItem('role')\n//     }\n//\n//     static isAuthenticated(){\n//         const token = localStorage.getItem('token')\n//         return !!token\n//     }\n//\n//     static isAdmin(){\n//         const role = localStorage.getItem('role')\n//         return role === 'ADMIN'\n//     }\n//\n// }\n//\n\n//\n// import axios from \"axios\";\n//\n// export default class ApiService {\n//     static BASE_URL = \"http://localhost:2424\";\n//\n//     static getHeader() {\n//         const token = localStorage.getItem(\"token\");\n//         return {\n//             Authorization: `Bearer ${token}`,\n//             \"Content-Type\": \"application/json\"\n//         };\n//     }\n//\n//     /** AUTH & USERS API */\n//     static async registerUser(registration) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\n//         return response.data;\n//     }\n//\n//     static async loginUser(loginDetails) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\n//         return response.data;\n//     }\n//\n//     static async getLoggedInUserInfo() {\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** PRODUCT ENDPOINT */\n//     static async addProduct(formData) {\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateProduct(formData) {\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProducts() {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`);\n//         return response.data;\n//     }\n//\n//     static async searchProducts(searchValue) {\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\n//             params: { searchValue }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProductsByCategoryId(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-category-id/${categoryId}`);\n//         return response.data;\n//     }\n//\n//     static async getProductById(productId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\n//         return response.data;\n//     }\n//\n//     static async deleteProduct(productId) {\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** CATEGORY */\n//     static async createCategory(body) {\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllCategory() {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`);\n//         return response.data;\n//     }\n//\n//     static async getCategoryById(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\n//         return response.data;\n//     }\n//\n//     static async updateCategory(categoryId, body) {\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async deleteCategory(categoryId) {\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** ORDER */\n//     static async createOrder(body) {\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllOrders() {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getOrderItemById(itemId) {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader(),\n//             params: { itemId }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllOrderItemsByStatus(status) {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader(),\n//             params: { status }\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateOrderitemStatus(orderItemId, status) {\n//         const response = await axios.put(`${this.BASE_URL}/order/update-item-status/${orderItemId}`, {}, {\n//             headers: this.getHeader(),\n//             params: { status }\n//         });\n//         return response.data;\n//     }\n//\n//     /** ADDRESS */\n//     static async saveAddress(body) {\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** CART */\n//     static async addItemToCart(item) {\n//         const response = await axios.post(`${this.BASE_URL}/cart/add-item`, item, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getCartItems() {\n//         const response = await axios.get(`${this.BASE_URL}/cart/get-items`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async removeCartItem(itemId) {\n//         const response = await axios.delete(`${this.BASE_URL}/cart/remove-item/${itemId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getCartItemsByUserId(userId, token) {\n//         const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\n//             headers: {\n//                 'Authorization': `Bearer ${token}`,\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     /** AUTHENTICATION CHECKER */\n//     static logout() {\n//         localStorage.removeItem(\"token\");\n//         localStorage.removeItem(\"role\");\n//     }\n//\n//     static isAuthenticated() {\n//         const token = localStorage.getItem(\"token\");\n//         return !!token;\n//     }\n//\n//     static isAdmin() {\n//         const role = localStorage.getItem(\"role\");\n//         return role === \"ADMIN\";\n//     }\n// }\n\n//\n// import axios from \"axios\";\n//\n// export default class ApiService {\n//     static BASE_URL = \"http://localhost:2424\";\n//\n//     static getHeader() {\n//         const token = localStorage.getItem(\"token\");\n//         return {\n//             Authorization: `Bearer ${token}`,\n//             \"Content-Type\": \"application/json\"\n//         };\n//     }\n//\n//     /** AUTH & USERS API */\n//     static async registerUser(registration) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\n//         return response.data;\n//     }\n//\n//     static async loginUser(loginDetails) {\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\n//         return response.data;\n//     }\n//\n//     static async getLoggedInUserInfo() {\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** PRODUCT ENDPOINT */\n//     static async addProduct(formData) {\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateProduct(formData) {\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\n//             headers: {\n//                 ...this.getHeader(),\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllProducts() {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`);\n//         return response.data;\n//     }\n//\n//     static async searchProducts(searchValue) {\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\n//             params: { searchValue }\n//         });\n//         return response.data;\n//     }\n//\n//     static async getProductById(productId) {\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\n//         return response.data;\n//     }\n//\n//     static async deleteProduct(productId) {\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** CATEGORY */\n//     static async createCategory(body) {\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllCategory() {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`);\n//         return response.data;\n//     }\n//\n//     static async getCategoryById(categoryId) {\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\n//         return response.data;\n//     }\n//\n//     static async updateCategory(categoryId, body) {\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async deleteCategory(categoryId) {\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** ORDER */\n//     static async createOrder(body) {\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async getAllOrders() {\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** ADDRESS */\n//     static async saveAddress(body) {\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** CART */\n//     static async getCartByUserId(userId) {\n//         const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async addToCart(userId, productId, quantity) {\n//         const response = await axios.post(`${this.BASE_URL}/cart/add`, {\n//             userId,\n//             productId,\n//             quantity\n//         }, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     static async updateCartItem(cartId, quantity) {\n//         const response = await axios.put(`${this.BASE_URL}/cart/update/${cartId}`, null, {\n//             headers: this.getHeader(),\n//             params: { quantity }\n//         });\n//         return response.data;\n//     }\n//\n//     static async removeCartItem(cartId) {\n//         const response = await axios.delete(`${this.BASE_URL}/cart/remove/${cartId}`, {\n//             headers: this.getHeader()\n//         });\n//         return response.data;\n//     }\n//\n//     /** AUTHENTICATION CHECKER */\n//     static logout() {\n//         localStorage.removeItem(\"token\");\n//         localStorage.removeItem(\"role\");\n//     }\n//\n//     static isAuthenticated() {\n//         const token = localStorage.getItem(\"token\");\n//         return !!token;\n//     }\n//\n//     static isAdmin() {\n//         const role = localStorage.getItem(\"role\");\n//         return role === \"ADMIN\";\n//     }\n// }\n\nimport axios from \"axios\";\nexport default class ApiService {\n  static getHeader() {\n    const token = localStorage.getItem(\"token\");\n    return {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    };\n  }\n\n  /** CART */\n  // Automatically fetches the cart for the currently logged-in user based on token\n  static async getCartForCurrentUser() {\n    const response = await axios.get(`${this.BASE_URL}/cart/user`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  // Adds a product to the cart for the current user (user ID inferred from token)\n  static async addToCart(productId, quantity) {\n    const response = await axios.post(`${this.BASE_URL}/cart/add`, {\n      productId,\n      quantity\n    }, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  // Other cart methods remain the same\n  static async updateCartItem(cartId, quantity) {\n    const response = await axios.put(`${this.BASE_URL}/cart/update/${cartId}`, {\n      quantity\n    }, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async removeCartItem(cartId) {\n    const response = await axios.delete(`${this.BASE_URL}/cart/remove/${cartId}`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n}\nApiService.BASE_URL = \"http://localhost:2424\";","map":{"version":3,"names":["axios","ApiService","getHeader","token","localStorage","getItem","Authorization","getCartForCurrentUser","response","get","BASE_URL","headers","data","addToCart","productId","quantity","post","updateCartItem","cartId","put","removeCartItem","delete"],"sources":["D:/project modifications/sportshub/client/src/service/ApiService.js"],"sourcesContent":["//\r\n// import axios from \"axios\";\r\n//\r\n// export default class ApiService {\r\n//\r\n//     //Here  I had used No Ip dns bcz when I stopped instance so it will automatically configure with instance ip address.\r\n//     // static BASE_URL = \"http://sportsclub.ddns.net:2424\";\r\n//\r\n//\r\n//\r\n//     // static BASE_URL = \"http://13.201.81.16:2424\";\r\n//     //\r\n//     //ec2-13-201-81-16.ap-south-1.compute.amazonaws.com\r\n//\r\n//     static BASE_URL = \"http://localhost:2424\";\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//     static getHeader() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return {\r\n//             Authorization: `Bearer ${token}`,\r\n//             \"Content-Type\": \"application/json\"\r\n//         };\r\n//     }\r\n//\r\n//     /**AUTh && USERS API */\r\n//     static async registerUser(registration) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration)\r\n//         return response.data;\r\n//     }\r\n//\r\n//\r\n//     static async loginUser(loginDetails) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails)\r\n//         return response.data;\r\n//     }\r\n//\r\n//\r\n//     static async getLoggedInUserInfo() {\r\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//\r\n//     /**PRODUCT ENDPOINT */\r\n//\r\n//     static async addProduct(formData) {\r\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateProduct(formData) {\r\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProducts() {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async searchProducts(searchValue) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\r\n//             params: { searchValue }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProductsByCategoryId(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-category-id/${categoryId}`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getProductById(productId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteProduct(productId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /**CATEGORY */\r\n//     static async createCategory(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllCategory() {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCategoryById(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`)\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateCategory(categoryId, body) {\r\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteCategory(categoryId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /**ORDEDR */\r\n//     static async createOrder(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrders() {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getOrderItemById(itemId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader(),\r\n//             params: {itemId}\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrderItemsByStatus(status) {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader(),\r\n//             params: {status}\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateOrderitemStatus(orderItemId, status) {\r\n//         const response = await axios.put(`${this.BASE_URL}/order/update-item-status/${orderItemId}`, {}, {\r\n//             headers: this.getHeader(),\r\n//             params: {status}\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//\r\n//\r\n//\r\n//     /**ADDRESS */\r\n//     static async saveAddress(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\r\n//             headers: this.getHeader()\r\n//         })\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /***AUTHEMNTICATION CHECKER */\r\n//     static logout(){\r\n//         localStorage.removeItem('token')\r\n//         localStorage.removeItem('role')\r\n//     }\r\n//\r\n//     static isAuthenticated(){\r\n//         const token = localStorage.getItem('token')\r\n//         return !!token\r\n//     }\r\n//\r\n//     static isAdmin(){\r\n//         const role = localStorage.getItem('role')\r\n//         return role === 'ADMIN'\r\n//     }\r\n//\r\n// }\r\n//\r\n\r\n//\r\n// import axios from \"axios\";\r\n//\r\n// export default class ApiService {\r\n//     static BASE_URL = \"http://localhost:2424\";\r\n//\r\n//     static getHeader() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return {\r\n//             Authorization: `Bearer ${token}`,\r\n//             \"Content-Type\": \"application/json\"\r\n//         };\r\n//     }\r\n//\r\n//     /** AUTH & USERS API */\r\n//     static async registerUser(registration) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async loginUser(loginDetails) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getLoggedInUserInfo() {\r\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** PRODUCT ENDPOINT */\r\n//     static async addProduct(formData) {\r\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateProduct(formData) {\r\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProducts() {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async searchProducts(searchValue) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\r\n//             params: { searchValue }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProductsByCategoryId(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-category-id/${categoryId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getProductById(productId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteProduct(productId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** CATEGORY */\r\n//     static async createCategory(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllCategory() {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCategoryById(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateCategory(categoryId, body) {\r\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteCategory(categoryId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** ORDER */\r\n//     static async createOrder(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrders() {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getOrderItemById(itemId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader(),\r\n//             params: { itemId }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrderItemsByStatus(status) {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader(),\r\n//             params: { status }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateOrderitemStatus(orderItemId, status) {\r\n//         const response = await axios.put(`${this.BASE_URL}/order/update-item-status/${orderItemId}`, {}, {\r\n//             headers: this.getHeader(),\r\n//             params: { status }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** ADDRESS */\r\n//     static async saveAddress(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** CART */\r\n//     static async addItemToCart(item) {\r\n//         const response = await axios.post(`${this.BASE_URL}/cart/add-item`, item, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCartItems() {\r\n//         const response = await axios.get(`${this.BASE_URL}/cart/get-items`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async removeCartItem(itemId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/cart/remove-item/${itemId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCartItemsByUserId(userId, token) {\r\n//         const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\r\n//             headers: {\r\n//                 'Authorization': `Bearer ${token}`,\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** AUTHENTICATION CHECKER */\r\n//     static logout() {\r\n//         localStorage.removeItem(\"token\");\r\n//         localStorage.removeItem(\"role\");\r\n//     }\r\n//\r\n//     static isAuthenticated() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return !!token;\r\n//     }\r\n//\r\n//     static isAdmin() {\r\n//         const role = localStorage.getItem(\"role\");\r\n//         return role === \"ADMIN\";\r\n//     }\r\n// }\r\n\r\n//\r\n// import axios from \"axios\";\r\n//\r\n// export default class ApiService {\r\n//     static BASE_URL = \"http://localhost:2424\";\r\n//\r\n//     static getHeader() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return {\r\n//             Authorization: `Bearer ${token}`,\r\n//             \"Content-Type\": \"application/json\"\r\n//         };\r\n//     }\r\n//\r\n//     /** AUTH & USERS API */\r\n//     static async registerUser(registration) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async loginUser(loginDetails) {\r\n//         const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getLoggedInUserInfo() {\r\n//         const response = await axios.get(`${this.BASE_URL}/user/my-info`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** PRODUCT ENDPOINT */\r\n//     static async addProduct(formData) {\r\n//         const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateProduct(formData) {\r\n//         const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\r\n//             headers: {\r\n//                 ...this.getHeader(),\r\n//                 \"Content-Type\": \"multipart/form-data\"\r\n//             }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllProducts() {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-all`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async searchProducts(searchValue) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/search`, {\r\n//             params: { searchValue }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getProductById(productId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/product/get-by-product-id/${productId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteProduct(productId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** CATEGORY */\r\n//     static async createCategory(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/category/create`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllCategory() {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-all`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getCategoryById(categoryId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id/${categoryId}`);\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateCategory(categoryId, body) {\r\n//         const response = await axios.put(`${this.BASE_URL}/category/update/${categoryId}`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async deleteCategory(categoryId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/category/delete/${categoryId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** ORDER */\r\n//     static async createOrder(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/order/create`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async getAllOrders() {\r\n//         const response = await axios.get(`${this.BASE_URL}/order/filter`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** ADDRESS */\r\n//     static async saveAddress(body) {\r\n//         const response = await axios.post(`${this.BASE_URL}/address/save`, body, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** CART */\r\n//     static async getCartByUserId(userId) {\r\n//         const response = await axios.get(`${this.BASE_URL}/cart/user/${userId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async addToCart(userId, productId, quantity) {\r\n//         const response = await axios.post(`${this.BASE_URL}/cart/add`, {\r\n//             userId,\r\n//             productId,\r\n//             quantity\r\n//         }, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async updateCartItem(cartId, quantity) {\r\n//         const response = await axios.put(`${this.BASE_URL}/cart/update/${cartId}`, null, {\r\n//             headers: this.getHeader(),\r\n//             params: { quantity }\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     static async removeCartItem(cartId) {\r\n//         const response = await axios.delete(`${this.BASE_URL}/cart/remove/${cartId}`, {\r\n//             headers: this.getHeader()\r\n//         });\r\n//         return response.data;\r\n//     }\r\n//\r\n//     /** AUTHENTICATION CHECKER */\r\n//     static logout() {\r\n//         localStorage.removeItem(\"token\");\r\n//         localStorage.removeItem(\"role\");\r\n//     }\r\n//\r\n//     static isAuthenticated() {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         return !!token;\r\n//     }\r\n//\r\n//     static isAdmin() {\r\n//         const role = localStorage.getItem(\"role\");\r\n//         return role === \"ADMIN\";\r\n//     }\r\n// }\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default class ApiService {\r\n    static BASE_URL = \"http://localhost:2424\";\r\n\r\n    static getHeader() {\r\n        const token = localStorage.getItem(\"token\");\r\n        return {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n    }\r\n\r\n    /** CART */\r\n    // Automatically fetches the cart for the currently logged-in user based on token\r\n    static async getCartForCurrentUser() {\r\n        const response = await axios.get(`${this.BASE_URL}/cart/user`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    // Adds a product to the cart for the current user (user ID inferred from token)\r\n    static async addToCart(productId, quantity) {\r\n        const response = await axios.post(`${this.BASE_URL}/cart/add`, {\r\n            productId,\r\n            quantity\r\n        }, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    // Other cart methods remain the same\r\n    static async updateCartItem(cartId, quantity) {\r\n        const response = await axios.put(`${this.BASE_URL}/cart/update/${cartId}`, {\r\n            quantity\r\n        }, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async removeCartItem(cartId) {\r\n        const response = await axios.delete(`${this.BASE_URL}/cart/remove/${cartId}`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,MAAMC,UAAU,CAAC;EAG5B,OAAOC,SAASA,CAAA,EAAG;IACf,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO;MACHC,aAAa,EAAE,UAAUH,KAAK,EAAE;MAChC,cAAc,EAAE;IACpB,CAAC;EACL;;EAEA;EACA;EACA,aAAaI,qBAAqBA,CAAA,EAAG;IACjC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,YAAY,EAAE;MAC3DC,OAAO,EAAE,IAAI,CAACT,SAAS,CAAC;IAC5B,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACI,IAAI;EACxB;;EAEA;EACA,aAAaC,SAASA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IACxC,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACN,QAAQ,WAAW,EAAE;MAC3DI,SAAS;MACTC;IACJ,CAAC,EAAE;MACCJ,OAAO,EAAE,IAAI,CAACT,SAAS,CAAC;IAC5B,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACI,IAAI;EACxB;;EAEA;EACA,aAAaK,cAAcA,CAACC,MAAM,EAAEH,QAAQ,EAAE;IAC1C,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACmB,GAAG,CAAC,GAAG,IAAI,CAACT,QAAQ,gBAAgBQ,MAAM,EAAE,EAAE;MACvEH;IACJ,CAAC,EAAE;MACCJ,OAAO,EAAE,IAAI,CAACT,SAAS,CAAC;IAC5B,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACI,IAAI;EACxB;EAEA,aAAaQ,cAAcA,CAACF,MAAM,EAAE;IAChC,MAAMV,QAAQ,GAAG,MAAMR,KAAK,CAACqB,MAAM,CAAC,GAAG,IAAI,CAACX,QAAQ,gBAAgBQ,MAAM,EAAE,EAAE;MAC1EP,OAAO,EAAE,IAAI,CAACT,SAAS,CAAC;IAC5B,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACI,IAAI;EACxB;AACJ;AA/CqBX,UAAU,CACpBS,QAAQ,GAAG,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}